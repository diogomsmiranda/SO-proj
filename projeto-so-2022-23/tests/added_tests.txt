Functions created to test added commands

1. tfs_copy_from_external_fs:
    -> copy_from_external_huge:
       Copies from "file_to_copy_over1024.txt", a file with over 1024chars, 
       TecnicoFS char limit per file is 1024chars, entry in the TecnicoFS
       file system should copy the first 1024chars from the given file.
    -> tfs_open_big_name:
       Tries to create a file with a name of over 40 characters, the max
       size defined in TecnicoFS (MAX_FILE_NAME). Fails in the creation.
  


2. tfs_link_counter & tfs_unlink:
    -> t1_2_9_hard_link_counter:
       Counts evolution of hardlinks to a given file:
        -> file is created (1 hardlink).
        -> hardlink to file is created (+1 hardlink = 2 hardlinks).
        -> unlink created hardlink (-1 hardlink = 1 hardlink).
        -> unlink created file (-1 hardlink = 0 hardlinks).
    
   tfs_sym_link:
    -> t1_2_10_symlink_to_symlink:
       Creates a symbolic link to a symbolic link, new symbolic link points 
       to the file pointed by the old symbolic link, both symbolic links co-exist. 
       Verifies that it can edit the file from the new symbolic link.


3. threads:
   -> t1_3_1_thread_sym :
      Create a first file.
      Creates 4 threads and create symbolic links and hard links to those files.
      Unlinking them aswell in the process.
      All of this while pausing in key moments each thread so they can 
      intercalate between each other.
   -> t1_3_2_thread_read :
      Creates 3 threads that will each create an hard link to that file.
      After joining the threads the test asserts if the number of hardlinks is the correct.
   -> t1_3_3_thread_copy :
      Creates again 3 threads that will copy from external the same file 3 times.
      Then test that newly created file by linking and unlinking new files to it.

t_file_is_open_error :
   When a file is opened it can't be deleted.
   A symlink can always be deleted.
   An hardlink cant be deleted unless it has no other hardlinks of the same file (its the file it self).
      

